install.packages("CHAID", repos="http://R-Forge.R-project.org")
install.packages("/Applications/R Apps/CHAID")
install.packages("/Applications/R Apps/CHAID/R")
install.packages(CHAID_0.1-0.tar)
install.packages("CHAID_0.1-0.tar")
chaid
library("CHAID")#
#
  ### fit tree to subsample#
  set.seed(290875)#
  USvoteS <- USvote[sample(1:nrow(USvote), 1000),]#
#
  ctrl <- chaid_control(minsplit = 200, minprob = 0.1)#
  chaidUS <- chaid(vote3 ~ ., data = USvoteS, control = ctrl)#
#
  print(chaidUS)#
  plot(chaidUS)
plot
load
library()
getwd()
mldatadir = "/Users/jacquelinefloyd/Documents/Personal/Courses/Machine Learning/data/";
print(mldatadir)
setwd(mldatadir)
getwd()
list.files()
mldata = "/Users/jacquelinefloyd/Documents/Personal/Courses/Machine Learning/data/";
setwd(mldata)
source(rsettings.R)
setwd(/Users/jacquelinefloyd)
getwd()
setwd("/Users/jacquelinefloyd")
get()
getwd()
source(rsettings.R)
source("rsettings.R")
getwd()
library()
mlhackers = "/Users/jacquelinefloyd/Documents/Personal/Courses/Machine Learning/ML_for_Hackers/";
setwd(mlhackers)
list.files()
source("package_installer.R")
ml01 = "/Users/jacquelinefloyd/Documents/Personal/Courses/Machine Learning/ML_for_Hackers/01-Introduction/";
setwd(ml01)
list.files()
source("ufo_sightings.R")
library('ggplot2')
plyr()
reshape()
library(ggplot2)
library(plyr)
require(plyr)
?plyr
??plyr
require(plyr)
require("plyr")
help("plyr")
install.packages("plyr", dependencies=TRUE)
require("plyr")
library(plyr)
?plyr
help("plyr")
??plyr
ufo <- read.delim(file.path("data", "ufo", "ufo_awesome.tsv"),#
                  sep = "\t",#
                  stringsAsFactors = FALSE,#
                  header = FALSE, #
                  na.strings = "")
;
??base::delim
help.search("delimited")
RSiteSearch("parsing text")
?read.delim
??base::delim
?read.delim
help.search("delimited")
RSiteSearch("delimited")
RSiteSearch("input delimited")
?read.delim
?read.delim
head(ufo)
tail(ufo)
head(ufo)
summary(ufo)
names(ufo)
names(ufo) <- c("DateOccurred", "DateReported",#
                "Location", "ShortDescription",#
                "Duration", "LongDescription")
names(ufo)
head(ufo)
?as.Date
ufo$DateOccurred <- as.Date(ufo$DateOccurred, format = "%Y%m%d")
good.rows <- ifelse(nchar(ufo$DateOccurred) != 8 |#
                    nchar(ufo$DateReported) != 8,#
                    FALSE,#
                    TRUE)
head(good.rows)
tail(good.rows)
length(which(good.rows))
length(which(|good.rows))
length(which(!good.rows))
?which
length(good.rows)
ufo <- ufo[good.rows, ]
ufo$DateOccurred <- as.Date(ufo$DateOccurred, format = "%Y%m%d")
ufo$DateReported <- as.Date(ufo$DateReported, format = "%Y%m%d")
sumary(ufo)
summary(ufo)
head(ufo)
?tryCatch
?strsplit
?gsub
?return
?strsplit
?function
()
{}
?trycatch
?tryCatch
get.location <- function(l)#
{#
  split.location <- tryCatch(strsplit(l, ",")[[1]],#
                             error = function(e) return(c(NA, NA)))#
  clean.location <- gsub("^ ","",split.location)#
  if (length(clean.location) > 2)#
  {#
    return(c(NA,NA))#
  }#
  else#
  {#
    return(clean.location)#
  }#
}
head(get.location)
?gsub
?tryCatch
?lapply
lapply(ufo)
city.state <- lapply(ufo$Location, get.location)
head(city.state)
head(clean.location)
?do.call
?rbind
?do.call
?rbind
location.matrix <- do.call(rbind, city.state)
head(location.matrix)
?transform
ufo <- transform(ufo,#
                 USCity = location.matrix[, 1],#
                 USState = tolower(location.matrix[, 2]),#
                 stringsAsFactors = FALSE)
us.states <- c("ak", "al", "ar", "az", "ca", "co", "ct",#
               "de", "fl", "ga", "hi", "ia", "id", "il",#
               "in", "ks", "ky", "la", "ma", "md", "me",#
               "mi", "mn", "mo", "ms", "mt", "nc", "nd",#
               "ne", "nh", "nj", "nm", "nv", "ny", "oh",#
               "ok", "or", "pa", "ri", "sc", "sd", "tn",#
               "tx", "ut", "va", "vt", "wa", "wi", "wv",#
               "wy")
?c
?match
ufo$USState <- us.states[match(ufo$USState, us.states)]
head(ufo$USState)
ufo$USCity[is.na(ufo$USState)] <- NA
ufo.us <- subset(ufo, !is.na(USState))
summary(ufo.us)
head(ufo.us)
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +#
  geom_histogram() + #
  scale_x_date(major = "50 years")#
ggsave(plot = quick.hist,#
       filename = file.path("images", "quick_hist.pdf"),#
       height = 6,#
       width = 8)
summary(ufo.us$DateOccurred)
summary(ufo.us)
summary(ufo$Location)
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +#
  geom_histogram() + #
  scale_x_date(major = "50 years")
?aes
quick.hist <- ggplot(ufo.us, aes(x = "DateOccurred")) +#
  geom_histogram() + #
  scale_x_date(major = "50 years")
?ggplot
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +#
  geom_histogram() + #
  scale_x_date(major = "50 years")
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram()
ggsave(plot = quick.hist,#
       filename = file.path("images", "quick_hist.pdf"),#
       height = 6,#
       width = 8)
?scale_x_date
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram() +#
   scale_x_date(breaks = "50 years")
ggsave(plot = quick.hist,#
       filename = file.path("images", "quick_hist.pdf"),#
       height = 6,#
       width = 8)
quick.hist <- 0
quick.hist <- []
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram() +#
   scale_x_date(breaks = "50 years")#
#
ggsave(plot = quick.hist,#
       filename = file.path("images", "quick_hist.pdf"),#
       height = 6,#
       width = 8)
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram() #
#
ggsave(plot = quick.hist,#
       filename = file.path("images", "quick_hist.pdf"),#
       height = 6,#
       width = 8)
?scale_x_date
?scales
library(scales)
?scales
require(scales)
?scales
?ggplot
ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram()
?geom_histogram
ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram() +#
   scale_x_date(breaks = date_breaks(width = "50 years"), labels = date_format("%Y"))
ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram()
ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram() +#
   scale_x_date(breaks = date_breaks(width = "50 years"), labels = date_format("%Y"))
ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram()
ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram()
print(quick.hist)
ufo.us <- subset(ufo.us, DateOccurred >= as.Date("1990-01-01"))
ggplot(ufo.us, aes(x = DateOccurred)) +#
   geom_histogram()
new.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +#
  geom_histogram() +#
  scale_x_date(major = "50 years")#
print(new.hist)
new.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +#
  geom_histogram() #
print(new.hist)
?ddply
sightings.counts <- ddply(ufo.us, .(USState,YearMonth), nrow)
ufo.us$YearMonth <- strftime(ufo.us$DateOccurred, format = "%Y-%m")
sightings.counts <- ddply(ufo.us, .(USState,YearMonth), nrow)
head(sightings.counts)
summary(sightings.counts)
max(sightings.counts)
max(sightings.counts[,2])
max(sightings.counts[,3])
